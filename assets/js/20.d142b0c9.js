(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{408:function(t,s,a){"use strict";a.r(s);var n=a(52),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-精粹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-精粹"}},[t._v("#")]),t._v(" JavaScript 精粹")]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("JavaScript是弱类型语言，但不是没有类型，js可以识别下面7种类型的值：")]),t._v(" "),a("p",[a("strong",[t._v("基本数据类型")])]),t._v(" "),a("ul",[a("li",[t._v("Boolean")]),t._v(" "),a("li",[t._v("Number")]),t._v(" "),a("li",[t._v("String")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("Symbol")])]),t._v(" "),a("p",[a("strong",[t._v("Object")])]),t._v(" "),a("ul",[a("li",[t._v("Array")]),t._v(" "),a("li",[t._v("RegExp")]),t._v(" "),a("li",[t._v("Date")]),t._v(" "),a("li",[t._v("Math")]),t._v(" "),a("li",[t._v("Function")])]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("在应用程序中，使用变量来为值命名。变量的名称称为 identifiers")]),t._v(" "),a("p",[a("strong",[t._v("声明")])]),t._v(" "),a("p",[t._v("1.使用关键字 var：函数作用域")]),t._v(" "),a("p",[t._v("2.使用关键字 let：块作用域")]),t._v(" "),a("p",[t._v("3.直接使用：全局作用域")]),t._v(" "),a("p",[t._v("const 关键字可以声明不可变变量，同样为块作用域。对不可变的理解在对象上的理解需要注意")]),t._v(" "),a("p",[a("strong",[t._v("变量提升")])]),t._v(" "),a("p",[t._v("JavaScript中可以引用稍后声明的变量，不会引发异常，这一概念称为变量声明提升。")]),t._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("p",[t._v("一个函数就是一个可以被外界代码调用（或者函数本身递归调用）的子程序。")]),t._v(" "),a("p",[a("strong",[t._v("定义函数")])]),t._v(" "),a("p",[t._v("1.函数声明")]),t._v(" "),a("p",[t._v("2.函数表达式")]),t._v(" "),a("p",[t._v("3.Function构造函数")]),t._v(" "),a("p",[t._v("4.箭头函数")]),t._v(" "),a("p",[a("strong",[t._v("rest")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Array[3]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[1,2,3]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("default")])]),t._v(" "),a("p",[t._v("函数的参数可以在定义的时候约定默认值")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("p",[t._v("JavaScript 中对象是可变键控集合")]),t._v(" "),a("p",[a("strong",[t._v("定义对象")])]),t._v(" "),a("p",[t._v("1.字面量")]),t._v(" "),a("p",[t._v("2.构造函数")]),t._v(" "),a("h2",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),a("p",[t._v("构造函数和普通函数没什么区别，使用 new 关键字调用就是构造函数，使用构造函数可以实例化一个对象")]),t._v(" "),a("p",[t._v("函数的返回值有两种可能")]),t._v(" "),a("p",[t._v("1.显式调用 return 返回 return 后表达式的求值")]),t._v(" "),a("p",[t._v("2.没有调用 return 返回 undefined")]),t._v(" "),a("p",[t._v("构造函数的返回值")]),t._v(" "),a("p",[t._v("1.没有返回值")]),t._v(" "),a("p",[t._v("2.简单数据类型")]),t._v(" "),a("p",[t._v("3.对象类型")]),t._v(" "),a("p",[t._v("前两种情况构造函数返回构造对象的实例，实例化对象正是利用的这个特性。")]),t._v(" "),a("p",[t._v("第三种构造函数和普通函数表现一致，返回 return 后表达式的结果")]),t._v(" "),a("p",[a("strong",[t._v("prototype")])]),t._v(" "),a("p",[t._v("1.每个函数都有一个 prototype 的对象属性，对象内有一个constructor 属性，默认指向函数本身")]),t._v(" "),a("p",[t._v("2.每个对象都有一个 __prpto__的属性，属性指向其父类型的 prototype")]),t._v(" "),a("p",[a("strong",[t._v("this场景")])]),t._v(" "),a("p",[t._v("普通函数")]),t._v(" "),a("p",[t._v("1.严格模式：undefined")]),t._v(" "),a("p",[t._v("2.非严格模式：全局对象")]),t._v(" "),a("ul",[a("li",[t._v("1.Node：global")]),t._v(" "),a("li",[t._v("2.浏览器：window")])]),t._v(" "),a("p",[t._v("构造函数：对象的实例")]),t._v(" "),a("p",[t._v("对象方法：对象本身")]),t._v(" "),a("p",[a("strong",[t._v("继承")])]),t._v(" "),a("p",[t._v("在js的场景，继承有两个目标，子类需要得到父类：属性和方法。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _prototype"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_prototype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("_prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继承")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("English")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("language")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继承属性")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新加属性")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//继承方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("English"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("People"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("English")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("introduce")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新加方法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("p",[a("strong",[t._v("ES6 class和继承")])]),t._v(" "),a("p",[t._v("上边的代码在es6中重写")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("English")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("People")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("language")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("introduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("p",[a("strong",[t._v("高阶函数")])]),t._v(" "),a("p",[t._v("高阶函数是把函数当做参数或者返回值是函数的函数")]),t._v(" "),a("p",[a("strong",[t._v("闭包")])]),t._v(" "),a("p",[t._v("闭包由两部分组成")]),t._v(" "),a("p",[t._v("1.函数")]),t._v(" "),a("p",[t._v("2.环境：函数创建时作用域内的局部变量")]),t._v(" "),a("h2",{attrs:{id:"js函数式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js函数式编程"}},[t._v("#")]),t._v(" js函数式编程")]),t._v(" "),a("ul",[a("li",[t._v("函数式编程思维")]),t._v(" "),a("li",[t._v("函数式编程常用核心概念")]),t._v(" "),a("li",[t._v("当下函数式编程最热的库")]),t._v(" "),a("li",[t._v("函数式编程的实际应用场景")])]),t._v(" "),a("p",[a("strong",[t._v("函数式编程思维")])]),t._v(" "),a("p",[t._v("在了解函数式编程思维之前先了解一下范畴论：")]),t._v(" "),a("ul",[a("li",[t._v("1.函数式编程是范畴论的数学分支是一门复杂的数学，认为世界上所有概念提醒都可以抽象出一个个范畴。")]),t._v(" "),a("li",[t._v("2.彼此之间存在某种关系概念、事物、对象等等，都构成范畴。任何事物只要找出他们之间的关系，就能定义")]),t._v(" "),a("li",[t._v("3.箭头表示范畴成员之间的关系，正式的名称叫做“态射”。范畴论认为，同一个范畴的所有成员，就是不太状态的变形。通过“态射”，一个成员可以变形成另一成员。")])]),t._v(" "),a("p",[t._v("函数式编程基本理论：")]),t._v(" "),a("ul",[a("li",[t._v("1.函数式编程是一个很早的概念，它的模型源于一套用于研究函数定义、函数应用和递归的形式系统。")]),t._v(" "),a("li",[t._v("2.函数式编程不是用函数来编程，也不是传统的面向过程编程。主旨在于将复杂的函数符合成简单的函数。运算过程尽量写成一系列嵌套的函数调用。")]),t._v(" "),a("li",[t._v("3.js是披着 C 外套的Lisp。")]),t._v(" "),a("li",[t._v("4.真正的火热是随着react 的高阶函数而逐步升温。")])]),t._v(" "),a("p",[t._v("1.函数是一等公民。所谓一等公民，指的是函数与其他数据类型一样，处于平等地位，可以赋值给其他变量，也可以作为参数，传入另一函数，或者作为别的函数的返回值。")]),t._v(" "),a("p",[t._v("2.不可改变量。在函数式编程中，我们通常理解的变量在函数式编程中也被函数代替另：在函数式编程中变量仅仅代表某个表达式。这里所说的变量“是不能被修改的，\n所有的变量只能被赋予一次初值")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("map& reduce他们是最常用的函数式编程的方法。")])]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("p",[t._v("1.函数是一等公民")]),t._v(" "),a("p",[t._v("2.只用“表达式”，不用“语句”")]),t._v(" "),a("p",[t._v("3.没有“副作用”")]),t._v(" "),a("p",[t._v("4.不改变状态")]),t._v(" "),a("p",[t._v("5.引用透明（函数运行只靠参数）")]),t._v(" "),a("p",[a("strong",[t._v("函数式编程常用核心概念")])]),t._v(" "),a("ul",[a("li",[t._v("纯函数")]),t._v(" "),a("li",[t._v("偏应用函数、函数的柯里化")]),t._v(" "),a("li",[t._v("函数组合")]),t._v(" "),a("li",[t._v("Point Free")]),t._v(" "),a("li",[t._v("声明式与命令式代码")]),t._v(" "),a("li",[t._v("惰性求值")])]),t._v(" "),a("p",[a("strong",[t._v("纯函数")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("纯函数是对于相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用，也不依赖外部环境的状态。\n\n纯函数不仅可以有效降低系统的复杂性，还有可缓存性\n")])])]),a("p",[a("strong",[t._v("偏应用函数、函数的柯里化")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("偏应用函数是传递给函数一部分参数来调用它，让它返回一个函数去处理剩下的参数。\n\n偏函数的偏，在于其只能处理那些能与至少一个case语句匹配的输入，而不能处理所有可能的输入。\n\n函数的柯里化：\n")])])]),a("ul",[a("li",[t._v("柯里化通过偏应用函数实现。")]),t._v(" "),a("li",[t._v("传递给函数一部分参数来调用它，让它返回一个函数去处理剩下的参数。")])]),t._v(" "),a("p",[a("strong",[t._v("函数组合")])]),t._v(" "),a("ul",[a("li",[t._v("纯函数以及如何把它柯里化写出的洋葱代码 h(g(f(x))) ，为了解决函数嵌套的问题，需要用到函数组合")]),t._v(" "),a("li",[t._v("就是把柯里化的代码改成像多个函数拼接一样")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toUp")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("word")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("toUp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sdd dsd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("Point Free")])]),t._v(" "),a("ul",[a("li",[t._v("把一些对象自带的方法转化成纯函数，不要命名成转瞬即逝的中间变量。")]),t._v(" "),a("li",[t._v("这个函数中，我们使用了 str 作为中间变量，但这个变量除了让代码变长毫无意义。")])]),t._v(" "),a("p",[a("strong",[t._v("声明式与命令式代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" 命令式代码是通过一条又一条指令去让计算机执行一些动作，这其中一般都会涉及到很多细节。而声明式就要更好，通过写表达式的方式来声明做什么。\n")])])]),a("p",[a("strong",[t._v("惰性求值")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" 在指令式语言中代码会按顺序执行，由于每个函数都有可能改动或依赖外部的状态，因此必须顺序执行。\n")])])]),a("p",[t._v("优缺点：")]),t._v(" "),a("p",[t._v("函数式编程的一个明显的好处就是这种声明式的代码，对于无副作用的纯函数，我们可以完全不考虑函数内部是如何实现的，专注于编写业务代码。优化代码时，只需要集中在这些稳定坚固的函数内部即可。")]),t._v(" "),a("p",[t._v("相反，不纯的函数式代码会产生副作用或者依赖外部系统环境，使用它们的时候总要考虑副作用。在复杂的系统中，这对于程序员是极大的负担。")]),t._v(" "),a("h3",{attrs:{id:"再深入了解编程式函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#再深入了解编程式函数"}},[t._v("#")]),t._v(" 再深入了解编程式函数")]),t._v(" "),a("ul",[a("li",[t._v("高阶函数")]),t._v(" "),a("li",[t._v("尾调用优化PTC")]),t._v(" "),a("li",[t._v("闭包")]),t._v(" "),a("li",[t._v("容器、Functor")]),t._v(" "),a("li",[t._v("错误处理、Either、AP")]),t._v(" "),a("li",[t._v("IO")]),t._v(" "),a("li",[t._v("Monad")])]),t._v(" "),a("p",[a("strong",[t._v("高阶函数")])]),t._v(" "),a("p",[t._v("函数当参数，把传入的函数做一个封装，然后返回这个封装函数，达到更高程度的抽象。简单来说，"),a("code",[t._v("它是一等公民，已一个函数作为参数，已一个函数作为返回结果")]),t._v(".")]),t._v(" "),a("p",[a("strong",[t._v("尾调用优化")])]),t._v(" "),a("p",[t._v("指函数内部的最后一个动作是函数调用。该调用的返回值，直接返回给函数。函数调用自身，称为递归。如果尾调用自身，就称为尾递归。递归需要保存大量的调用记录，很容易发生栈溢出错误，如果使用尾递归优化，将递归变为循环，那么只需要保存一个调用记录，就不会发生栈溢出错误了。")]),t._v(" "),a("p",[a("strong",[t._v("函子")])]),t._v(" "),a("p",[t._v("函子是函数式编程里面最重要的数据类型，也是基本的运算单位和功能单位。它首先是一种范畴，也就是说，是一个容器，包含了值和变形关系。比较特殊的是，它的变形关系可以依次作用于每一个值，当前容器变形称另一个容器。")]),t._v(" "),a("ul",[a("li",[t._v("$(...)返回的对象并不是一个原生的DOM对象，而是对于原生对象的一种封装，这在某种意义上就是一个容器。")]),t._v(" "),a("li",[t._v("函子遵守一些特定规律的容器类型")]),t._v(" "),a("li",[t._v("函子是一个对于函数调用的抽象，我们赋予容器自己去调用函数的能力。把东西装进一个容器，只留下一个接口 map 给容器外的函数，map一个函数时，我们让容器自己来运行这个函数，这样容器就可以自由地选择何时何地如何操作这个函数，以至于拥有惰性求值、错误处理、异步调用等等的特性。")])]),t._v(" "),a("p",[a("strong",[t._v("错误处理、Either")])]),t._v(" "),a("p",[t._v("容器能做的事情太少了，try/catch/throw并不是“纯”的，因为它从外部接管了我们的函数，并且在这个函数出错时抛弃了它的返回值。")]),t._v(" "),a("p",[t._v("Promise是可以调用catch来集中处理错误的。")]),t._v(" "),a("p",[t._v("事实上Either并不是用来做错误处理的，它表示了逻辑或，范畴学里的coproduce。")]),t._v(" "),a("p",[a("strong",[t._v("AP函子")])]),t._v(" "),a("p",[t._v("函子里面包含的值，完全可能是函数。我们可以想象这样一种情况，一个函子的值是数值，另一个函子的值是函数。")]),t._v(" "),a("p",[a("strong",[t._v("IO")])]),t._v(" "),a("p",[t._v("IO跟前面几个Functor不同的地方在于，它的__value是一个函数。")]),t._v(" "),a("p",[t._v("它把不纯的操作（比如IO、网络请求、DOM）包裹在一个函数内，从而延迟这个操作的执行。所以我们认为，IO包含的是被包裹的操作的返回值。")]),t._v(" "),a("p",[t._v("IO其实算是惰性求值。")]),t._v(" "),a("p",[t._v("IO负责了调用链积累了很多不纯的操作，带来的复杂性和不可维护性。")]),t._v(" "),a("p",[a("strong",[t._v("Monad")])]),t._v(" "),a("p",[t._v("Monad就是一种设计模式，表示将一个运算过程，通过函数拆解成互相连接的多个步骤。你只要提供下一步运算所需的函数，整个运算就会自动进行下去。")]),t._v(" "),a("p",[t._v("Promise是一种Monad")]),t._v(" "),a("p",[t._v("Monad让我们避开了嵌套地狱，可以轻松地进行深度嵌套的函数式编程，比如IO和其他异步任务。")]),t._v(" "),a("p",[a("strong",[t._v("当下函数式编程最热的库")])]),t._v(" "),a("ul",[a("li",[t._v("RxJS")]),t._v(" "),a("li",[t._v("cycleJS")]),t._v(" "),a("li",[t._v("lodashJS、lazy")]),t._v(" "),a("li",[t._v("underscoreJS")]),t._v(" "),a("li",[t._v("ramdajs")])]),t._v(" "),a("p",[a("strong",[t._v("实际应用场景")])]),t._v(" "),a("ul",[a("li",[t._v("易调试、热部署、并发")]),t._v(" "),a("li",[t._v("单元测试")])]),t._v(" "),a("h2",{attrs:{id:"js数据推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js数据推送"}},[t._v("#")]),t._v(" Js数据推送")]),t._v(" "),a("h3",{attrs:{id:"comet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comet"}},[t._v("#")]),t._v(" Comet")]),t._v(" "),a("p",[t._v("基于HTTP长连接的服务器推送技术")])])}),[],!1,null,null,null);s.default=r.exports}}]);