(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{431:function(e,l,i){"use strict";i.r(l);var v=i(52),s=Object(v.a)({},(function(){var e=this,l=e.$createElement,i=e._self._c||l;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"自动化部署"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#自动化部署"}},[e._v("#")]),e._v(" 自动化部署")]),e._v(" "),i("h2",{attrs:{id:"效果"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[e._v("#")]),e._v(" 效果")]),e._v(" "),i("ul",[i("li",[e._v("1.将上一个项目，首页的页面内容， 图书展示页⾯ 添加内容分X-TAG 、 PolymerJS、 omi 三种库\n"),i("x-books"),i("x-insert")],1),e._v(" "),i("li",[e._v("2.Gulp 编译原来的node项⽬目 把import <-require。gulp-rollup对原来node的项目进行流清洗。\n"),i("ul",[i("li",[e._v("为什么使⽤Gulp不使⽤Webpack编译NodeJS?")]),e._v(" "),i("li",[e._v("(1) Gulp 简单 很简单对es6需要的地方进⾏")]),e._v(" "),i("li",[e._v("(2) 清洗他的时候 灵活")]),e._v(" "),i("li",[e._v("(3) Webpack 前端包工具 慢！！！")])])]),e._v(" "),i("li",[e._v("3.前端分离出来 引入Webpack 编译前端的代码到指定目录")]),e._v(" "),i("li",[e._v("4.补全测试 RIZE、 Service 然后部署到Travis、 Jenkins平台根据每次的提交直接提交到远程阿里云、腾讯云")]),e._v(" "),i("li",[e._v("5.开发一个命令行 能够创建项目、辅助开发")])]),e._v(" "),i("h2",{attrs:{id:"步骤"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[e._v("#")]),e._v(" 步骤")]),e._v(" "),i("ul",[i("li",[e._v("先把之前Node.js与Vue的项目目录修改一下，把 assets、components、views 放到新建的web文件夹下；把 config、controllers、libs、logs、middlewares、models、app.js放到新建的server文件夹下(之后会用 Gulp来处理server文件夹，Webpack来处理web文件夹)。")]),e._v(" "),i("li",[e._v("安装一个包，用于并行或者顺序运行多个npm脚本 yarn add npm-run-all -D")]),e._v(" "),i("li",[e._v("为了以后webpack更好维护 新建一个scripts用来存放脚本的，安装 yarn add scripty -D，\n"),i("ul",[i("li",[e._v('例如把配置中改成 "client:build":"scripty"，直接就关联到scripts/client/build.sh')]),e._v(" "),i("li",[e._v('再加两个"client:dev"、"client:prod" 方便打包。')]),e._v(" "),i("li",[e._v("在执行前要加一下权限，chmod -R +x script")]),e._v(" "),i("li",[e._v("再 yarn run client:dev")])])]),e._v(" "),i("li",[e._v('同理，把"server:start"也给改了。')]),e._v(" "),i("li",[e._v("配置 webpack.config.js\n"),i("ul",[i("li",[e._v("安装 yarn add yargs-parser 把config中的配置引到webpack.config.js里")]),e._v(" "),i("li",[e._v("安装 yarn add webpack-merge -D 把配置合并的")])])]),e._v(" "),i("li",[e._v("编写多页（MPA）组件和页面。\n"),i("ul",[i("li",[e._v("views分成books、index、layouts三个文件夹。")]),e._v(" "),i("li",[e._v("components分成banner、list二个文件夹。")]),e._v(" "),i("li",[e._v("banner组件里是切换 首页，添加图书，列表页的。所以index页和list页要引入 用include。")]),e._v(" "),i("li",[e._v("list组件是展示的，所以列表页需要引入 用include。")]),e._v(" "),i("li",[e._v("把assets文件夹里的先删掉，因为这里放views和components公用的。")]),e._v(" "),i("li",[e._v("把组件里html写好。")]),e._v(" "),i("li",[e._v("在引入时views不光把模版引入，还要components组件中的css，js静态文件也一起引入。所以改变一下views的结构，books下把页面放在pages文件夹下，然后新建js，books-create.entry和books-list.entry（这个命名一定要一一对应）。index同理。这两个js就是处理加载组件静态文件的。")]),e._v(" "),i("li",[e._v("然后在组件中写入一些js和css，例如引入jquery， yarn add jquery。")])])]),e._v(" "),i("li",[e._v("让books-create.entry等js 分析静态文件并引入到views里。\n"),i("ul",[i("li",[e._v("在webpack.config.js中，引入glob，并分析.entry 的js。")]),e._v(" "),i("li",[e._v("发现一个问题，原目录web和server应该都不是要上线，所以外边加一个文件夹名src。")]),e._v(" "),i("li",[e._v("继续配置webpack.config.js，把分析的.entry 的js遍历出来并用正则，获取到books-create，books-list的名字。")]),e._v(" "),i("li",[e._v("然后 yarn run client:dev可以把.entry js打包好了。配置一下打包在dist/script下。")]),e._v(" "),i("li",[e._v("接下来把js放到相应的views里，安装 yarn add html-webpack-plugin 在config下新建一个htmlAfterPlugin.js")]),e._v(" "),i("li",[e._v("在htmlAfterPlugin里编写钩子来把js替换进去。")]),e._v(" "),i("li",[e._v("把components再打包过去。在config/dev 里拷贝，安装 yarn add copy-webpack-plugin -D")]),e._v(" "),i("li",[e._v("到这里就把前端文件整理完了。")])])]),e._v(" "),i("li",[e._v("让Gulp处理后端文件。\n"),i("ul",[i("li",[e._v("流清洗之前先把server里都换成ES6 module")]),e._v(" "),i("li",[e._v("安装 Gulp,yarn add gulp -D")]),e._v(" "),i("li",[e._v("在 gulpfile里写开发环境、上线环境、清洗环境。")]),e._v(" "),i("li",[e._v("webpack和gulp都需要babel，webpack是babel-loader，在webpack.config.js里加配置babel。")]),e._v(" "),i("li",[e._v("安装 yarn add -D babel-loader @babel/core @babel/preset-env")]),e._v(" "),i("li",[e._v("然后是gulp，在gulpfile 配置gulp-watch、gulp-babel")]),e._v(" "),i("li",[e._v("安装 yarn add @babel/plugin-transform-modules-commonjs -D")]),e._v(" "),i("li",[e._v("安装 yarn add gulp-watch gulp gulp-babel -D")]),e._v(" "),i("li",[e._v("清洗 安装yarn add gulp-rollup -D，让babel不编译src/server/config/index.js，")]),e._v(" "),i("li",[e._v("安装 yarn add @rollup/plugin-replace -D 深度的tree shaking")])])]),e._v(" "),i("li",[e._v("接下来就是上线准备\n"),i("ul",[i("li",[e._v("在webpack.config.js里设置别名，这样把views里banner路径改@；再设置 externals: jquery，提升webpack打包速度。")]),e._v(" "),i("li",[e._v("安装 node-bash-title 这是能把终端上的名字改掉，方便我们知道这个终端在干什么的小工具")]),e._v(" "),i("li",[e._v("先把start.sh中地址改成./dist/app.js")]),e._v(" "),i("li",[e._v("启动 yarn run server:start")])])])]),e._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/wumao016/webpack-gulp-project",target:"_blank",rel:"noopener noreferrer"}},[e._v("代码地址"),i("OutboundLink")],1)])])}),[],!1,null,null,null);l.default=s.exports}}]);