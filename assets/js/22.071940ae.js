(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{410:function(s,n,t){"use strict";t.r(n);var a=t(52),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),t("h2",{attrs:{id:"nginx的反向代理与负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx的反向代理与负载均衡"}},[s._v("#")]),s._v(" Nginx的反向代理与负载均衡")]),s._v(" "),t("ul",[t("li",[s._v("什么是反向代理与负载均衡\n"),t("ul",[t("li",[s._v("反向代理："),t("code",[s._v("反向代理（Reverse Proxy）")]),s._v("实际运行方式是指以代理服务器来接受连接请求，然后将请求转发给网络上的服务器集群，具体哪台服务器返数据我们不知道。"),t("code",[s._v("正向代理")]),s._v("，比如我们国内访问国外网站，直接访问访问不到，可以通过一个代理服务器，请求发到代理服务器上，由代理去取到数据返回给我们，我们能知道要访问的地址。")])])]),s._v(" "),t("li",[s._v("nginx负载均衡的实现\n"),t("ul",[t("li",[s._v("我们可以建立多个服务器，这些服务器组成一个服务器集群，然后，当用户访问网站时，先访问一个中间服务器，再让这个中间服务器在服务器集群中选择一个压力较小的服务器，将该访问请求引入该选择的服务器。")])])]),s._v(" "),t("li",[s._v("HTTP Upstream模块\n"),t("ul",[t("li",[s._v("是nginx服务器的一个重要模块。实现在轮询和客户端ip之间实现后端的负载均衡。常用指令有ip_hash指令、server指令和upstream指令等。")]),s._v(" "),t("li",[s._v("ip_hash指令，如果客户端请求已经访问了服务器A并登录，那么第二次请求的时候，会将该请求通过哈希算法自动定位到该后端服务器中。")]),s._v(" "),t("li",[s._v("server指令主要用于指定服务器的名称和参数。")])])]),s._v(" "),t("li",[s._v("其他负载均衡的方法\n"),t("ul",[t("li",[s._v("软件")]),s._v(" "),t("li",[s._v("硬件")])])])]),s._v(" "),t("h3",{attrs:{id:"部署nodejs上线步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署nodejs上线步骤"}},[s._v("#")]),s._v(" 部署nodejs上线步骤")]),s._v(" "),t("ul",[t("li",[s._v("1.安装homebrew")]),s._v(" "),t("li",[s._v("2.brew search nginx 、brew install nginx")]),s._v(" "),t("li",[s._v("3.brew info nginx")]),s._v(" "),t("li",[s._v("4.nginx -v")]),s._v(" "),t("li",[s._v("5.启动 sudo brew services start nginx或nginx")]),s._v(" "),t("li",[s._v("如果安装过jenkins的话，执行下面一步")]),s._v(" "),t("li",[s._v("sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist")]),s._v(" "),t("li",[s._v("systemctl start jenkins")]),s._v(" "),t("li",[s._v("6.关闭 sudo brew services stop nginx/nginx")]),s._v(" "),t("li",[s._v("7.nginx -s reload、nginx -s stop")]),s._v(" "),t("li",[s._v("8.打开nginx具体安装目录 查看配置文件 cd /usr/local/etc/ 、ls 、cd nginx 、cat nginx.conf")]),s._v(" "),t("li",[s._v("/usr/local/var/www 静态资源文件")]),s._v(" "),t("li",[s._v("验证配置文件 nginx -t -c 自己的配置文件")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//test_conf 修改配置文件，完成负载均衡")]),s._v("\nworker_processes "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nevents"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tworker_connections "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nhttp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tupstream firsttest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tip_hash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tserver "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("111.13")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".100")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".92")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tserver "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("111.13")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".100")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".92")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\tserver"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tlisten "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tlocation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tproxy_pass http"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("firsttest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h2",{attrs:{id:"nginx的缓存策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx的缓存策略"}},[s._v("#")]),s._v(" Nginx的缓存策略")]),s._v(" "),t("ul",[t("li",[s._v("打开nginx 查看配置文件 cd /usr/local/etc/nginx 、cat nginx.conf")]),s._v(" "),t("li",[s._v("默认ETag Last-Modified都是开启的,可以关掉ETag")]),s._v(" "),t("li",[s._v("sudo nginx -s reload 重启后，ETag就没有了")])]),s._v(" "),t("p",[s._v("跟缓存相关的是\nETag、Last-Modified、、expires、Cache-Control。")])])}),[],!1,null,null,null);n.default=e.exports}}]);